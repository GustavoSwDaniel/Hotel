<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_CadastroF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        u+F6JjkZogAAAABJRU5ErkJggg==
</value>
  </data>
</root>